<UserControl x:Class="b7.Xabbo.View.FigureRandomizerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:b7.Xabbo"
             xmlns:svc="clr-namespace:b7.Xabbo.Services"
             xmlns:converters="clr-namespace:b7.Xabbo.WPF.Converters"
             xmlns:viewModel="clr-namespace:b7.Xabbo.ViewModel"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:mde="clr-namespace:MaterialDesignExtensions.Controls;assembly=MaterialDesignExtensions"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="400"
             d:DataContext="{d:DesignInstance Type={x:Type viewModel:FigureRandomizerViewManager}}"
             x:Name="root"
             TextElement.Foreground="{StaticResource MaterialDesignBody}"
             TextElement.FontFamily="{StaticResource MaterialDesignFont}"
             TextElement.FontSize="14">
    <UserControl.Resources>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
            <Setter Property="Margin" Value="4" />
        </Style>
        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MaterialDesignBody1TextBlock}">
            <Setter Property="Margin" Value="4" />
        </Style>
        <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource MaterialDesignCheckBox}">
            <Setter Property="Margin" Value="2" />
        </Style>
        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
            <Setter Property="Margin" Value="4" />
        </Style>
        <ControlTemplate x:Key="ColorCheckBoxTemplate" TargetType="{x:Type CheckBox}">
            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                    <Grid x:Name="markGrid">
                        <Path x:Name="optionMark" Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z" Fill="{TemplateBinding Foreground}" Margin="1" Opacity="0" Stretch="None" />
                        <Rectangle x:Name="indeterminateMark" Fill="#FF212121" Margin="2" Opacity="0"/>
                    </Grid>
                </Border>
                <!--ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/-->
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasContent" Value="True">
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Padding" Value="4,-1,0,0"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <!--Setter Property="Background" TargetName="checkBoxBorder" Value="#FFF3F9FF"/-->
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF5593FF"/>
                    <!--Setter Property="Fill" TargetName="optionMark" Value="#FF212121"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF212121"/-->
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFE6E6E6"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FFBCBCBC"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#FF707070"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF707070"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFD9ECFF"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF3C77DD"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#FF212121"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF212121"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="{x:Null}">
                    <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Resources>
    <ScrollViewer x:Name="layoutRoot" VerticalScrollBarVisibility="Auto">
        <StackPanel Orientation="Vertical" IsEnabled="{Binding IsReady}">
            <Grid Margin="2" IsEnabled="{Binding IsTimerActive, Converter={StaticResource NotConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <CheckBox Margin="2" VerticalContentAlignment="Center" VerticalAlignment="Center"
                          Content="Use base" IsChecked="{Binding UseBaseFigure}" />
                <TextBox
                    Grid.Column="1" Margin="4" Padding="0"
                    VerticalContentAlignment="Center"
                    FontSize="14"
                    Text="{Binding BaseFigureString, UpdateSourceTrigger=PropertyChanged}"
                />
                <ComboBox Grid.Column="2" Margin="4"
                          ItemsSource="{Binding Genders}"
                          SelectedItem="{Binding BaseFigureGender, Mode=TwoWay}"
                />
                <Button Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"
                        Padding="8,2"
                        Content="Get current figure"
                        Command="{Binding GetCurrentFigureCommand}" />
                <CheckBox Grid.Row="2" Grid.ColumnSpan="3"
                    Margin="2" HorizontalAlignment="Right" VerticalAlignment="Center" VerticalContentAlignment="Center"
                    Content="Allow HC" IsChecked="{Binding AllowHC}" />
                <StackPanel Margin="4" Grid.ColumnSpan="3" Grid.Row="3" Grid.IsSharedSizeScope="True" HorizontalAlignment="Center">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="PartName" />
                            <ColumnDefinition Width="100" SharedSizeGroup="Probability" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Percentage" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="LockPart" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="LockColors" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.RowSpan="2" HorizontalAlignment="Right" VerticalAlignment="Bottom" FontWeight="Bold" Text="Part" />
                        <TextBlock Grid.RowSpan="2" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontWeight="Bold" Text="Chance" />
                        <TextBlock Grid.Column="3" Grid.ColumnSpan="2" HorizontalAlignment="Center" FontWeight="Bold" Text="Lock" />
                        <TextBlock Grid.Column="3" Grid.Row="1" HorizontalAlignment="Center" FontWeight="Bold" Text="Part" />
                        <TextBlock Grid.Column="4" Grid.Row="1" HorizontalAlignment="Center" FontWeight="Bold" Text="Color" />
                    </Grid>
                    <ItemsControl ItemsSource="{Binding FigurePartOptions}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type viewModel:FigureRandomizerPartViewModel}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="PartName" />
                                        <ColumnDefinition SharedSizeGroup="Probability" />
                                        <ColumnDefinition SharedSizeGroup="Percentage" />
                                        <ColumnDefinition SharedSizeGroup="LockPart" />
                                        <ColumnDefinition SharedSizeGroup="LockColors" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Column="0" Margin="2"
                                               HorizontalAlignment="Right" VerticalAlignment="Center"
                                               Text="{Binding Name}" ToolTip="{Binding ShortString}" />
                                    <TextBox Grid.Column="1" Margin="2" Padding="2,1"
                                             Text="{Binding Probability, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBlock Grid.Column="2" Margin="2"
                                               HorizontalAlignment="Center" VerticalAlignment="Center"
                                               Text="%" />
                                    <CheckBox Grid.Column="3"
                                              HorizontalAlignment="Center" VerticalAlignment="Center"
                                              IsChecked="{Binding IsLocked}"
                                              IsEnabled="{Binding ElementName=root, Path=DataContext.UseBaseFigure}" />
                                    <ItemsControl Grid.Column="4" ItemsSource="{Binding Colors}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate DataType="{x:Type viewModel:FigurePartColorViewModel}">
                                                <Grid>
                                                    <CheckBox
                                                        Style="{StaticResource MaterialDesignUserForegroundCheckBox}"
                                                        Margin="0" Padding="0"
                                                        HorizontalAlignment="Center" VerticalAlignment="Center"
                                                        Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                                                        IsChecked="{Binding IsLocked}"
                                                        IsEnabled="{Binding ElementName=root, Path=DataContext.UseBaseFigure}"
                                                        Foreground="{Binding Foreground}"
                                                        Background="{Binding Background}"
                                                        
                                                    >
                                                    </CheckBox>
                                                </Grid>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
                <Button Grid.Row="4" Grid.ColumnSpan="3"
                        Margin="2" Padding="8,2"
                        Command="{Binding RandomizeLooksCommand}" 
                        Content="Randomize looks" />
            </Grid>
            <Grid x:Name="gridDelay" Margin="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="60" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <TextBlock Margin="2" VerticalAlignment="Center" Text="Delay" />
                <TextBox Margin="2" Grid.Column="1"
                         HorizontalContentAlignment="Right" VerticalContentAlignment="Center"
                         IsEnabled="{Binding IsTimerActive, Converter={StaticResource NotConverter}}"
                         Text="{Binding TimerInterval, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock Grid.Column="2" Margin="2" VerticalAlignment="Center" Text="ms" />
                <Button Grid.Column="3"
                        Margin="2" Padding="0"
                        Command="{Binding StartStopTimerCommand}"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch">
                    <Button.Content>
                        <Grid IsHitTestVisible="False" Margin="-1">
                            <ProgressBar
                                Visibility="{Binding IsTimerActive, Converter={StaticResource BoolToVisibilityConverter}}"
                                IsIndeterminate="True"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Opacity="0.5"
                            />
                            <TextBlock Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Text" Value="Start timer" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsTimerActive}" Value="True">
                                                <Setter Property="Text" Value="Stop timer" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Button.Content>
                </Button>
            </Grid>
        </StackPanel>
    </ScrollViewer>
</UserControl>
